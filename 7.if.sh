#!/bin/bash
x=8

# > მეტია
# < ნაკლებია
# == ტოლია
# != არ უტოლდება
# >= მეტია ან ტოლია
# <= ნაკლებია ან ტოლია
# =~ ეკუთვნის

if [[ $x > 7 ]]; then # თუ ცვლადი მეტია შვიდზე
	echo "x მეტია შვიდზე და მისი მნიშვნელობა არის: $x" # აღსრულდეს
fi # დებულების სასრული

# ან

# -gt მეტია
# -lt ნაკლებია
# -eq ტოლია
# -ne არ უტოლდება. ყურადღება! განულებულ ოპერატორს არ აღიქვამს. აუცილებელია მნიშვნელობის მითითება შედარებისთვის
# -ge მეტია ან ტოლია
# -le ნაკლებია ან ტოლია

if [ $x -gt 3 ]; then # P.S. შესაძლებელია [ ] ნაცვლად [[ ]] ის გამოყენება
	echo "x მეტია სამზე და მისი მნიშვნელობა არის: $x"
fi
echo #\n ახალი ხაზისთვის

# P.S "if" პირობაში "!" წინმიწერით ხდება პირობის მნიშვნელობის საპირისპირო დებულების განხილვა
if ! [ "a" == "a" ]; then # საპირისპირო დებულება, რადგან "if [" ის ნაცვლად წერია "if ! ["
	echo როცა "a" და "a" არ არის ერთნაირი
else
	echo როცა "a" და "a" ერთნაირია
fi
echo

# ასევე შესაძლებელია ფაილის ან დირექციის არსებობის შემოწმება
# -f ფაილი
# -d დირექცია

if [ -f "6.if.sh" ]; then
	echo -e "ფაილი \"6.if.sh\" არსებობს"
else
	echo -e "ფაილი \"6.if.sh\" არ არსებობს"
fi

if [ -d "/usr/bin" ]; then
	echo -e "დირექცია \"/usr/bin\" არსებობს"
else
	echo -e "დირექცია \"/usr/bin\" არ არსებობს"
fi

# ასევე შესაძლებელი [[ ]] და [ ] ის ნაცვლად გამოიყენოთ (( )). (( )) არ გამოიყენება ტექსტის შედარებისთვის (char)
# if (( $x > 7 )); then
#	echo "x მეტია შვიდზე და მისი მნიშვნელობა არის: $x"
# fi # დებულების სასრული
